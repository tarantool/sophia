
#if 0
static void
cache_ss_set_get(void)
{
	void *env = sp_env();
	t( env != NULL );
	t( sp_setstring(env, "sophia.path", st_r.conf->sophia_dir, 0) == 0 );
	t( sp_setint(env, "scheduler.threads", 0) == 0 );
	t( sp_setstring(env, "db", "cache", 0) == 0 );
	t( sp_setstring(env, "db.cache.index.key", "u32",0) == 0 );
	t( sp_setint(env, "db.cache.sync", 0) == 0 );
	t( sp_setint(env, "db.cache.cache_mode", 1) == 0 );

	t( sp_setstring(env, "db", "test", 0) == 0 );
	t( sp_setstring(env, "db.test.index.key", "u32",0) == 0 );
	t( sp_setint(env, "db.test.sync", 0) == 0 );
	t( sp_setstring(env, "db.test.cache", "cache", 0) == 0 );
	t( sp_open(env) == 0 );

	void *db = sp_getobject(env, "db.test");
	t(db != NULL);

	void *o = sp_document(db);
	t( o != NULL );
	uint32_t key = 123;
	t( sp_setstring(o, "key", &key, sizeof(key)) == 0 );
	t( sp_set(db, o) == 0 );

	o = sp_document(db);
	t( o != NULL );
	t( sp_setstring(o, "key", &key, sizeof(key)) == 0 );
	o = sp_get(db, o);
	t( o != NULL );
	t( sp_destroy(o) == 0 );

	t( sp_destroy(env) == 0 );
}
#endif
